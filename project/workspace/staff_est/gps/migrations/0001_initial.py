# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2018-12-06 14:15
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Attributes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=4000)),
                ('type', models.CharField(max_length=128)),
                ('attribute', models.CharField(max_length=128)),
                ('expression', models.CharField(max_length=4000)),
            ],
            options={
                'db_table': 'attributes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Calendars',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('attributes', models.CharField(max_length=4000)),
                ('data', models.BinaryField()),
            ],
            options={
                'db_table': 'calendars',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Commands',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=4000)),
                ('type', models.CharField(max_length=128)),
                ('textchannel', models.BooleanField()),
                ('attributes', models.CharField(max_length=4000)),
            ],
            options={
                'db_table': 'commands',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Databasechangeloglock',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('locked', models.BooleanField()),
                ('lockgranted', models.DateTimeField(blank=True, null=True)),
                ('lockedby', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'databasechangeloglock',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DeviceAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'device_attribute',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DeviceCommand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'device_command',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DeviceDriver',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'device_driver',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DeviceGeofence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'device_geofence',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DeviceMaintenance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'device_maintenance',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DeviceNotification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'device_notification',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Devices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('uniqueid', models.CharField(max_length=128, unique=True)),
                ('lastupdate', models.DateTimeField(blank=True, null=True)),
                ('positionid', models.IntegerField(blank=True, null=True)),
                ('attributes', models.CharField(blank=True, max_length=4000, null=True)),
                ('phone', models.CharField(blank=True, max_length=128, null=True)),
                ('model', models.CharField(blank=True, max_length=128, null=True)),
                ('contact', models.CharField(blank=True, max_length=512, null=True)),
                ('category', models.CharField(blank=True, max_length=128, null=True)),
                ('disabled', models.NullBooleanField()),
            ],
            options={
                'db_table': 'devices',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Drivers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('uniqueid', models.CharField(max_length=128, unique=True)),
                ('attributes', models.CharField(max_length=4000)),
            ],
            options={
                'db_table': 'drivers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Events',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=128)),
                ('servertime', models.DateTimeField()),
                ('positionid', models.IntegerField(blank=True, null=True)),
                ('geofenceid', models.IntegerField(blank=True, null=True)),
                ('attributes', models.CharField(blank=True, max_length=4000, null=True)),
                ('maintenanceid', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'events',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Geofences',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('description', models.CharField(blank=True, max_length=128, null=True)),
                ('area', models.CharField(max_length=4096)),
                ('attributes', models.CharField(blank=True, max_length=4000, null=True)),
            ],
            options={
                'db_table': 'geofences',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GroupAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'group_attribute',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GroupCommand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'group_command',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GroupDriver',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'group_driver',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GroupGeofence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'group_geofence',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GroupMaintenance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'group_maintenance',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GroupNotification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'group_notification',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Groups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('attributes', models.CharField(blank=True, max_length=4000, null=True)),
            ],
            options={
                'db_table': 'groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Maintenances',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=4000)),
                ('type', models.CharField(max_length=128)),
                ('start', models.FloatField()),
                ('period', models.FloatField()),
                ('attributes', models.CharField(max_length=4000)),
            ],
            options={
                'db_table': 'maintenances',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Notifications',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=128)),
                ('attributes', models.CharField(blank=True, max_length=4000, null=True)),
                ('web', models.NullBooleanField()),
                ('mail', models.NullBooleanField()),
                ('sms', models.NullBooleanField()),
                ('always', models.BooleanField()),
            ],
            options={
                'db_table': 'notifications',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Positions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('protocol', models.CharField(blank=True, max_length=128, null=True)),
                ('servertime', models.DateTimeField()),
                ('devicetime', models.DateTimeField()),
                ('fixtime', models.DateTimeField()),
                ('valid', models.BooleanField()),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('altitude', models.FloatField()),
                ('speed', models.FloatField()),
                ('course', models.FloatField()),
                ('address', models.CharField(blank=True, max_length=512, null=True)),
                ('attributes', models.CharField(blank=True, max_length=4000, null=True)),
                ('accuracy', models.FloatField()),
                ('network', models.CharField(blank=True, max_length=4000, null=True)),
            ],
            options={
                'db_table': 'positions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PositionsTraccar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('protocol', models.CharField(blank=True, max_length=128, null=True)),
                ('servertime', models.DateTimeField(db_column='servertime')),
                ('devicetime', models.DateTimeField(db_column='devicetime')),
                ('fixtime', models.DateTimeField(db_column='fixtime')),
                ('valid', models.BooleanField()),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('altitude', models.FloatField()),
                ('speed', models.FloatField()),
                ('course', models.FloatField()),
                ('address', models.CharField(blank=True, max_length=512, null=True)),
                ('attributes', models.CharField(max_length=4096)),
            ],
            options={
                'db_table': 'positions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Servers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registration', models.BooleanField()),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('zoom', models.IntegerField()),
                ('map', models.CharField(blank=True, max_length=128, null=True)),
                ('bingkey', models.CharField(blank=True, max_length=128, null=True)),
                ('mapurl', models.CharField(blank=True, max_length=512, null=True)),
                ('readonly', models.BooleanField()),
                ('twelvehourformat', models.BooleanField()),
                ('attributes', models.CharField(blank=True, max_length=4000, null=True)),
                ('forcesettings', models.BooleanField()),
                ('coordinateformat', models.CharField(blank=True, max_length=128, null=True)),
                ('devicereadonly', models.NullBooleanField()),
                ('limitcommands', models.NullBooleanField()),
                ('poilayer', models.CharField(blank=True, max_length=512, null=True)),
            ],
            options={
                'db_table': 'servers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Statistics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('capturetime', models.DateTimeField()),
                ('activeusers', models.IntegerField()),
                ('activedevices', models.IntegerField()),
                ('requests', models.IntegerField()),
                ('messagesreceived', models.IntegerField()),
                ('messagesstored', models.IntegerField()),
                ('attributes', models.CharField(max_length=4000)),
                ('mailsent', models.IntegerField()),
                ('smssent', models.IntegerField()),
                ('geocoderrequests', models.IntegerField()),
                ('geolocationrequests', models.IntegerField()),
            ],
            options={
                'db_table': 'statistics',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'user_attribute',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserCalendar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'user_calendar',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserCommand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'user_command',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserDevice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'user_device',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserDriver',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'user_driver',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserGeofence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'user_geofence',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'user_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserMaintenance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'user_maintenance',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserNotification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'user_notification',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('email', models.CharField(max_length=128, unique=True)),
                ('hashedpassword', models.CharField(blank=True, max_length=128, null=True)),
                ('salt', models.CharField(blank=True, max_length=128, null=True)),
                ('readonly', models.BooleanField()),
                ('administrator', models.BooleanField()),
                ('map', models.CharField(blank=True, max_length=128, null=True)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('zoom', models.IntegerField()),
                ('twelvehourformat', models.BooleanField()),
                ('attributes', models.CharField(blank=True, max_length=4000, null=True)),
                ('coordinateformat', models.CharField(blank=True, max_length=128, null=True)),
                ('disabled', models.NullBooleanField()),
                ('expirationtime', models.DateTimeField(blank=True, null=True)),
                ('devicelimit', models.IntegerField(blank=True, null=True)),
                ('token', models.CharField(blank=True, max_length=128, null=True)),
                ('userlimit', models.IntegerField(blank=True, null=True)),
                ('devicereadonly', models.NullBooleanField()),
                ('phone', models.CharField(blank=True, max_length=128, null=True)),
                ('limitcommands', models.NullBooleanField()),
                ('login', models.CharField(blank=True, max_length=128, null=True)),
                ('poilayer', models.CharField(blank=True, max_length=512, null=True)),
            ],
            options={
                'db_table': 'users',
                'managed': False,
            },
        ),
    ]
